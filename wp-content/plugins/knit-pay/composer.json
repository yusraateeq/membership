{
	"repositories" : [{
			"type" : "git",
			"url" : "https://github.com/knit-pay/wp-pay-core"
		}, {
			"type" : "git",
			"url" : "https://github.com/knit-pay/extension-charitable"
		}, {
			"type" : "git",
			"url" : "https://github.com/knit-pay/extension-gravityforms"
		}, {
			"type" : "git",
			"url" : "https://github.com/knit-pay/extension-give"
		}, {
			"type" : "git",
			"url" : "https://github.com/knit-pay/extension-easy-digital-downloads"
		}, {
			"type" : "git",
			"url" : "https://github.com/knit-pay/extension-woocommerce"
		}, {
			"type" : "git",
			"url" : "https://github.com/knit-pay/extension-ninjaforms"
		}, {
			"type" : "git",
			"url" : "https://github.com/knit-pay/extension-memberpress"
		}, {
			"type" : "git",
			"url" : "https://github.com/knit-pay/extension-formidable-forms"
		}, {
			"type" : "git",
			"url" : "https://github.com/knit-pay/extension-restrict-content-pro"
		}
	],
	"config" : {
		"platform-check" : false,
		"sort-packages" : true,
		"allow-plugins" : {
			"dealerdirect/phpcodesniffer-composer-installer" : true,
			"bamarni/composer-bin-plugin" : true,
			"composer/installers" : true,
			"automattic/jetpack-autoloader" : true,
			"php-http/discovery" : true,
			"roots/wordpress-core-installer" : false
		},
		"platform" : {
			"php" : "8.0"
		}
	},
	"require" : {
		"automattic/jetpack-autoloader" : "^3.0",
		"iyzico/iyzipay-php" : "^2.0",
		"omnipay/common" : "^3.2",
		"payrexx/payrexx" : "^1.8",
		"paytm/paytmchecksum" : "^1.1",
		"php-http/guzzle7-adapter" : "^1.0",
		"pronamic/wp-datetime" : "^2.1",
		"pronamic/wp-html" : "^2.1",
		"pronamic/wp-money" : "^2.4",
		"pronamic/wp-number" : "^1.3",
		"razorpay/razorpay" : "2.*",
		"stripe/stripe-php" : "^7.67",
		"vlucas/phpdotenv" : "^5.6",
		"woocommerce/action-scheduler" : "^3.4.0",
		"wp-pay-extensions/charitable" : "dev-knitpay-master as 4.3.3",
		"wp-pay-extensions/easy-digital-downloads" : "dev-knitpay-master as 4.3.5",
		"wp-pay-extensions/formidable-forms" : "dev-knitpay-master as 4.4.2",
		"wp-pay-extensions/give" : "dev-knitpay-master as 4.2.3",
		"wp-pay-extensions/gravityforms" : "dev-knitpay-master as 4.6.1",
		"wp-pay-extensions/memberpress" : "dev-knitpay-master as 4.7.11",
		"wp-pay-extensions/ninjaforms" : "dev-knitpay-master as 3.3.2",
		"wp-pay-extensions/restrict-content-pro" : "dev-knitpay-master as 4.4.4",
		"wp-pay-extensions/woocommerce" : "dev-knitpay-master as 4.8.0",
		"wp-pay/core" : "dev-knitpay-master as 4.16.0"
	},
	"require-dev" : {
		"automattic/wordbless" : "^0.3 || ^0.4",
		"bamarni/composer-bin-plugin" : "^1.4",
		"php-coveralls/php-coveralls" : "^2.5",
		"php-stubs/wordpress-globals" : "^0.2.0",
		"phpmd/phpmd" : "^2.9",
		"pronamic/wp-coding-standards" : "^1.3",
		"pronamic/wp-deployer" : "dev-main",
		"roots/wordpress-no-content" : "^6.0",
		"wp-cli/wp-cli" : "dev-main",
		"wp-cli/wp-cli-bundle" : "dev-main",
		"yoast/phpunit-polyfills" : "^1.0"
	},
	"replace" : {
		"rmccue/requests" : "*",
		"roots/wordpress-no-content" : "*"
	},
	"extra" : {
		"installer-paths" : {
			"packages/{$vendor}/{$name}" : [
				"woocommerce/action-scheduler"
			]
		}
	},
	"scripts" : {
		"build" : [
			"@generate-readme",
			"@translate",
			"rm -rf ./build/",
			"mkdir ./build/",
			"mkdir ./build/plugin/",
			"rsync --recursive --delete --exclude-from=.pronamic-build-ignore ./ ./build/plugin/",
			"composer install --no-dev --prefer-dist --optimize-autoloader --working-dir=./build/plugin/",
			"vendor/bin/wp package path wp-cli/dist-archive-command || vendor/bin/wp package install wp-cli/dist-archive-command",
			"vendor/bin/wp dist-archive ./build/plugin/ --plugin-dirname=pronamic-ideal",
			"vendor/bin/wp dist-archive ./build/plugin/ ./build/pronamic-ideal.zip --plugin-dirname=pronamic-ideal"
		],
		"version" : "@build",
		"translate" : [
			"@make-pot",
			"@update-po"
		],
		"coverage" : "XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover build/logs/clover.xml --coverage-text",
		"coverage-clover" : "XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover build/logs/clover.xml",
		"coverage-html" : "XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-html build/coverage-html",
		"coverage-text" : "XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-text",
		"coveralls" : "vendor/bin/php-coveralls -v",
		"phpcbf" : "XDEBUG_MODE=off vendor/bin/phpcbf",
		"phpcs" : "XDEBUG_MODE=off vendor/bin/phpcs -s -v",
		"phplint" : "find src tests -name '*.php' | xargs -n 1 -P 4 php -l",
		"phpmd" : "vendor/bin/phpmd src,tests text phpmd.ruleset.xml --suffixes php",
		"phpstan" : "XDEBUG_MODE=off vendor/bin/phpstan analyse --memory-limit=-1",
		"phpunit" : "XDEBUG_MODE=off vendor/bin/phpunit --colors=always",
		"php-lint-plugin" : "find -L . -type f -path ./.git -prune -o -path ./deploy -prune -o -path ./node_modules -prune -o -path ./repositories -prune -o -path ./vendor -prune -o -path ./wordpress -prune -o -path ./wp-content -prune -o -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l -n",
		"php-lint-wp-pay" : "find -L ./repositories/ -type f -name .git -prune -o -name node_modules -prune -o -name vendor -prune -o -name wordpress -prune -o -name wp-content -prune -o -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l -n",
		"post-install-cmd" : [
			"echo 'Optionally run: composer bin all install'",
			"test -f wp-content/wordbless/src/dbless-wpdb.php && mkdir -p wordpress/wp-content && cp wp-content/wordbless/src/dbless-wpdb.php wordpress/wp-content/db.php || echo 0"
		],
		"post-update-cmd" : [
			"echo 'Optionally run: composer bin all update'",
			"test -f wp-content/wordbless/src/dbless-wpdb.php && mkdir -p wordpress/wp-content && cp wp-content/wordbless/src/dbless-wpdb.php wordpress/wp-content/db.php || echo 0"
		],
		"psalm" : "XDEBUG_MODE=off vendor/bin/psalm",
		"make-pot" : "XDEBUG_MODE=off vendor/bin/wp i18n make-pot . languages/pronamic_ideal.pot --slug=pronamic-ideal --exclude=build,deploy,vendor-bin,wordpress,wp-content",
		"update-po" : "find languages/*.po -type f -exec msgmerge --update --backup=off {} languages/pronamic_ideal.pot \\;",
		"generate-readme-txt" : "php src/readme-txt/readme.php > readme.txt",
		"generate-readme-md" : "php src/readme-md/README.php > README.md",
		"generate-readme" : [
			"@generate-readme-txt",
			"@generate-readme-md"
		],
		"release" : [
			"@build",
			"gsutil cp build/*.zip gs://downloads.pronamic.eu/plugins/pronamic-ideal",
			"curl --netrc --data version=$( npm pkg get version | jq . --raw-output ) --request PATCH https://www.pronamic.eu/wp-json/pronamic-wp-extensions/v1/plugins/pronamic-pay"
		]
	}
}